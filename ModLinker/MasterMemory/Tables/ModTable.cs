// <auto-generated />
#pragma warning disable CS0105
using MasterMemory.Validation;
using MasterMemory;
using MessagePack;
using ModLinker;
using System.Collections.Generic;
using System;

namespace ModLinker.Tables
{
   public sealed partial class ModTable : TableBase<Mod>, ITableUniqueValidate
   {
        public Func<Mod, Guid> PrimaryKeySelector => primaryIndexSelector;
        readonly Func<Mod, Guid> primaryIndexSelector;


        public ModTable(Mod[] sortedData)
            : base(sortedData)
        {
            this.primaryIndexSelector = x => x.Id;
            OnAfterConstruct();
        }

        partial void OnAfterConstruct();


        public Mod FindById(Guid key)
        {
            return FindUniqueCore(data, primaryIndexSelector, System.Collections.Generic.Comparer<Guid>.Default, key, false);
        }
        
        public bool TryFindById(Guid key, out Mod result)
        {
            return TryFindUniqueCore(data, primaryIndexSelector, System.Collections.Generic.Comparer<Guid>.Default, key, out result);
        }

        public Mod FindClosestById(Guid key, bool selectLower = true)
        {
            return FindUniqueClosestCore(data, primaryIndexSelector, System.Collections.Generic.Comparer<Guid>.Default, key, selectLower);
        }

        public RangeView<Mod> FindRangeById(Guid min, Guid max, bool ascendant = true)
        {
            return FindUniqueRangeCore(data, primaryIndexSelector, System.Collections.Generic.Comparer<Guid>.Default, min, max, ascendant);
        }


        void ITableUniqueValidate.ValidateUnique(ValidateResult resultSet)
        {
            ValidateUniqueCore(data, primaryIndexSelector, "Id", resultSet);       
        }

        public static MasterMemory.Meta.MetaTable CreateMetaTable()
        {
            return new MasterMemory.Meta.MetaTable(typeof(Mod), typeof(ModTable), "mods",
                new MasterMemory.Meta.MetaProperty[]
                {
                    new MasterMemory.Meta.MetaProperty(typeof(Mod).GetProperty("Id")),
                    new MasterMemory.Meta.MetaProperty(typeof(Mod).GetProperty("Name")),
                    new MasterMemory.Meta.MetaProperty(typeof(Mod).GetProperty("Links")),
                    new MasterMemory.Meta.MetaProperty(typeof(Mod).GetProperty("Url")),
                    new MasterMemory.Meta.MetaProperty(typeof(Mod).GetProperty("Description")),
                },
                new MasterMemory.Meta.MetaIndex[]{
                    new MasterMemory.Meta.MetaIndex(new System.Reflection.PropertyInfo[] {
                        typeof(Mod).GetProperty("Id"),
                    }, true, true, System.Collections.Generic.Comparer<Guid>.Default),
                });
        }

    }
}