// <auto-generated />
#pragma warning disable CS0105
using MasterMemory.Validation;
using MasterMemory;
using MessagePack;
using ModLinker;
using System.Collections.Generic;
using System;

namespace ModLinker.Tables
{
   public sealed partial class FileTable : TableBase<File>, ITableUniqueValidate
   {
        public Func<File, string> PrimaryKeySelector => primaryIndexSelector;
        readonly Func<File, string> primaryIndexSelector;


        public FileTable(File[] sortedData)
            : base(sortedData)
        {
            this.primaryIndexSelector = x => x.Path;
            OnAfterConstruct();
        }

        partial void OnAfterConstruct();


        public File FindByPath(string key)
        {
            return FindUniqueCore(data, primaryIndexSelector, System.StringComparer.Ordinal, key, false);
        }
        
        public bool TryFindByPath(string key, out File result)
        {
            return TryFindUniqueCore(data, primaryIndexSelector, System.StringComparer.Ordinal, key, out result);
        }

        public File FindClosestByPath(string key, bool selectLower = true)
        {
            return FindUniqueClosestCore(data, primaryIndexSelector, System.StringComparer.Ordinal, key, selectLower);
        }

        public RangeView<File> FindRangeByPath(string min, string max, bool ascendant = true)
        {
            return FindUniqueRangeCore(data, primaryIndexSelector, System.StringComparer.Ordinal, min, max, ascendant);
        }


        void ITableUniqueValidate.ValidateUnique(ValidateResult resultSet)
        {
            ValidateUniqueCore(data, primaryIndexSelector, "Path", resultSet);       
        }

        public static MasterMemory.Meta.MetaTable CreateMetaTable()
        {
            return new MasterMemory.Meta.MetaTable(typeof(File), typeof(FileTable), "files",
                new MasterMemory.Meta.MetaProperty[]
                {
                    new MasterMemory.Meta.MetaProperty(typeof(File).GetProperty("Path")),
                    new MasterMemory.Meta.MetaProperty(typeof(File).GetProperty("ModId")),
                    new MasterMemory.Meta.MetaProperty(typeof(File).GetProperty("ModPath")),
                    new MasterMemory.Meta.MetaProperty(typeof(File).GetProperty("TargetPath")),
                    new MasterMemory.Meta.MetaProperty(typeof(File).GetProperty("Directory")),
                },
                new MasterMemory.Meta.MetaIndex[]{
                    new MasterMemory.Meta.MetaIndex(new System.Reflection.PropertyInfo[] {
                        typeof(File).GetProperty("Path"),
                    }, true, true, System.StringComparer.Ordinal),
                });
        }

    }
}